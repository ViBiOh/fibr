---
jobs:
  include:
    - stage: Build

      language: go
      go: 1.14
      services:
        - docker
      before_install:
        - curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
        - sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
        - sudo apt-get update
        - sudo apt-get -y -o Dpkg::Options::="--force-confnew" install docker-ce
        - echo '{"experimental":true}' | sudo tee /etc/docker/daemon.json
        - sudo systemctl restart docker
      script:
        - make
        - git --no-pager diff -- ':(exclude)go.sum' && git diff --quiet -- ':(exclude)go.sum'
        - curl -q -sSL --max-time 30 -o cacert.pem https://curl.haxx.se/ca/cacert.pem
        - curl -q -sSL --max-time 30 -o mime.types "https://svn.apache.org/viewvc/httpd/httpd/trunk/docs/conf/mime.types?view=co"
        - curl -q -sSL --max-time 30 "https://raw.githubusercontent.com/ViBiOh/scripts/master/bootstrap" | bash -s "release"
        - echo "${DOCKER_PASS}" | docker login -u "${DOCKER_USER}" --password-stdin
        - DOCKER_IMAGE="${DOCKER_USER}/$(make name)" IMAGE_VERSION="$(make version)" ./scripts/release build docker
      after_success:
        - bash <(curl -s https://codecov.io/bash)

    - stage: Publish

      language: minimal
      script:
        - curl -q -sSL --max-time 30 "https://raw.githubusercontent.com/ViBiOh/scripts/master/bootstrap" | bash -s "docker_promote"
        - scripts/docker_promote "${DOCKER_USER}/$(make name)" "$(make version)"
      after_success:
        - curl -q -sSL --max-time 30 -X POST https://goreportcard.com/checks?repo=github.com/${TRAVIS_REPO_SLUG}

    - stage: Deploy

      language: minimal
      script:
        - curl -q -sSL --max-time 30 "https://raw.githubusercontent.com/ViBiOh/scripts/master/bootstrap" | bash -s "deploy" "env_replace"
        - VERSION="$(make version)" scripts/env_replace "docker-compose.yml" DOCKER_USER DATA_DIR DATA_USER_ID BASIC_USERS VERSION | sed "s|\\\$|\$\$|g" > "docker-compose-env.yml"
        - scripts/deploy "$(make name)" "@docker-compose-env.yml"

stages:
  - Build
  - name: Publish
    if: branch = master && type = push
  - name: Deploy
    if: branch = master && type = push

notifications:
  email: false
