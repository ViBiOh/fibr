---
name: Build

permissions:
  actions: none
  checks: none
  contents: read
  deployments: none
  issues: none
  packages: none
  pages: none
  pull-requests: none
  repository-projects: none
  security-events: none

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  SCRIPTS_NO_INTERACTIVE: "true"

defaults:
  run:
    shell: bash

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Golang
        uses: actions/setup-go@v5
        with:
          go-version: "^1.24"
          cache: true
      - name: Build
        run: |
          make
          git --no-pager diff -- ':(exclude)go.sum' && git diff --quiet -- ':(exclude)go.sum'

  package:
    name: Docker
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Golang
        uses: actions/setup-go@v5
        with:
          go-version: "^1.24"
          cache: true
      - name: Build
        env:
          GO_ARCHS: linux/amd64 linux/arm linux/arm64 darwin/amd64 darwin/arm64
          DD_API_KEY: ${{ secrets.DD_API_KEY }}
          DD_APP_KEY: ${{ secrets.DD_APP_KEY }}
          DD_ENV: production
          DD_SERVICE: fibr
          DD_SITE: datadoghq.eu
          PGO_NAME: fibr
        run: |
          curl --disable --silent --show-error --location --max-time 30 "https://raw.githubusercontent.com/ViBiOh/scripts/main/bootstrap.sh" | bash -s -- "-c" "release.sh"
          curl --disable --silent --show-error --location --max-time 30 -o mime.types "https://svn.apache.org/viewvc/httpd/httpd/trunk/docs/conf/mime.types?view=co"
          ./scripts/release.sh build
      - name: Setup Docker
        uses: docker/setup-buildx-action@v3
      - name: Docker
        if: env.SCW_SECRET_KEY
        env:
          DOCKER_REGISTRY: ${{ vars.DOCKER_REGISTRY }}
          DOCKER_NAMESPACE: ${{ vars.DOCKER_NAMESPACE }}
          SCW_SECRET_KEY: ${{ secrets.SCW_SECRET_KEY }}
        run: |
          curl --disable --silent --show-error --location --max-time 30 "https://raw.githubusercontent.com/ViBiOh/scripts/main/bootstrap.sh" | bash -s -- "-c" "release.sh"
          docker login "${DOCKER_REGISTRY}/${DOCKER_NAMESPACE}" -u nologin --password-stdin <<< "${SCW_SECRET_KEY}"
          RELEASE_NEED_WAIT=true DOCKER_IMAGE="${DOCKER_REGISTRY}/${DOCKER_NAMESPACE}/$(make name)" IMAGE_VERSION="$(make version)" GIT_SHA="$(make version-full)" ./scripts/release.sh docker

  publish:
    name: Publish
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    needs: package
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Publish
        if: env.SCW_SECRET_KEY
        env:
          DOCKER_REGISTRY: ${{ vars.DOCKER_REGISTRY }}
          DOCKER_NAMESPACE: ${{ vars.DOCKER_NAMESPACE }}
          SCW_ACCESS_KEY: ${{ secrets.SCW_ACCESS_KEY }}
          SCW_SECRET_KEY: ${{ secrets.SCW_SECRET_KEY }}
        run: |
          curl --disable --silent --show-error --location --max-time 30 "https://raw.githubusercontent.com/ViBiOh/scripts/main/bootstrap.sh" | bash -s -- "-c" "docker_promote.sh"
          docker login "${DOCKER_REGISTRY}/${DOCKER_NAMESPACE}" -u nologin --password-stdin <<< "${SCW_SECRET_KEY}"
          scripts/docker_promote.sh -d "$(make version-date)" "${DOCKER_NAMESPACE}/$(make name)" "$(make version)"
      - name: Flux
        if: emv.FLUX_WEBHOOK_URL
        env:
          FLUX_TOKEN: ${{ secrets.FLUX_TOKEN }}
          FLUX_WEBHOOK_URL: ${{ secrets.FLUX_WEBHOOK_URL }}
        run: |
          curl --disable --silent --show-error --location --max-time 30 --header "X-Signature: sha256=$(printf "{}" | openssl dgst -sha256 -r -hmac "${FLUX_TOKEN}"| awk '{print $1}')" --data "{}" "${FLUX_WEBHOOK_URL}"
